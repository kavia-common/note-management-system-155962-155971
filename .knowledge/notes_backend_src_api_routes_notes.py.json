{"is_source_file": true, "format": "Python", "description": "This file defines API routes for a note management system using FastAPI, including CRUD operations for notes, DB connection dependency, and route configurations.", "external_files": ["../config", "../db", "../models", "../repository"], "external_methods": ["get_settings", "open_connection", "create_note", "list_notes", "get_note", "update_note", "delete_note"], "published": ["router"], "classes": [], "methods": [{"name": "_get_db_conn(settings: Settings = Depends(get_settings))", "description": "Dependency to open and yield a database connection per request, ensuring proper cleanup.", "scope": "", "scopeKind": ""}, {"name": "NoteOut create_note_endpoint( payload: NoteCreate, settings: Settings = Depends(get_settings), conn=Depends(_get_db_conn), )", "description": "API endpoint to create a new note.", "scope": "", "scopeKind": ""}, {"name": "List[NoteOut] list_notes_endpoint( offset: int = Query(0, ge=0, description=\"Number of items to skip\"), limit: int = Query(100, ge=1, le=500, description=\"Maximum number of items to return\"), settings: Settings = Depends(get_settings), conn=Depends(_get_db_conn), )", "description": "API endpoint to list notes with pagination.", "scope": "", "scopeKind": ""}, {"name": "NoteOut get_note_endpoint( note_id: int = Path(..., ge=1, description=\"ID of the note to fetch\"), settings: Settings = Depends(get_settings), conn=Depends(_get_db_conn), )", "description": "API endpoint to fetch a specific note by ID.", "scope": "", "scopeKind": ""}, {"name": "NoteOut update_note_endpoint( payload: NoteUpdate, note_id: int = Path(..., ge=1, description=\"ID of the note to update\"), settings: Settings = Depends(get_settings), conn=Depends(_get_db_conn), )", "description": "API endpoint to update an existing note.", "scope": "", "scopeKind": ""}, {"name": "Response delete_note_endpoint( note_id: int = Path(..., ge=1, description=\"ID of the note to delete\"), settings: Settings = Depends(get_settings), conn=Depends(_get_db_conn), )", "description": "API endpoint to delete a note by ID.", "scope": "", "scopeKind": ""}], "calls": ["open_connection", "create_note", "list_notes", "get_note", "update_note", "delete_note"], "search-terms": ["notes_router", "note_crud", "FastAPI routes", "notes API", "notes CRUD methods", "database connection dependency", "NoteOut model API", "notes path parameter"], "state": 2, "file_id": 9, "knowledge_revision": 24, "git_revision": "7855768ac0b06037ec9cb6e55867f9a0811f0ab4", "revision_history": [{"19": ""}, {"23": "7855768ac0b06037ec9cb6e55867f9a0811f0ab4"}, {"24": "7855768ac0b06037ec9cb6e55867f9a0811f0ab4"}], "ctags": [{"_type": "tag", "name": "_get_db_conn", "path": "/home/kavia/workspace/code-generation/note-management-system-155962-155971/notes_backend/src/api/routes/notes.py", "pattern": "/^def _get_db_conn(settings: Settings = Depends(get_settings)):$/", "language": "Python", "kind": "function", "signature": "(settings: Settings = Depends(get_settings))"}, {"_type": "tag", "name": "create_note_endpoint", "path": "/home/kavia/workspace/code-generation/note-management-system-155962-155971/notes_backend/src/api/routes/notes.py", "pattern": "/^def create_note_endpoint($/", "language": "Python", "typeref": "typename:NoteOut", "kind": "function", "signature": "( payload: NoteCreate, settings: Settings = Depends(get_settings), conn=Depends(_get_db_conn), )"}, {"_type": "tag", "name": "delete_note_endpoint", "path": "/home/kavia/workspace/code-generation/note-management-system-155962-155971/notes_backend/src/api/routes/notes.py", "pattern": "/^def delete_note_endpoint($/", "language": "Python", "typeref": "typename:Response", "kind": "function", "signature": "( note_id: int = Path(..., ge=1, description=\"ID of the note to delete\"), settings: Settings = Depends(get_settings), conn=Depends(_get_db_conn), )"}, {"_type": "tag", "name": "get_note_endpoint", "path": "/home/kavia/workspace/code-generation/note-management-system-155962-155971/notes_backend/src/api/routes/notes.py", "pattern": "/^def get_note_endpoint($/", "language": "Python", "typeref": "typename:NoteOut", "kind": "function", "signature": "( note_id: int = Path(..., ge=1, description=\"ID of the note to fetch\"), settings: Settings = Depends(get_settings), conn=Depends(_get_db_conn), )"}, {"_type": "tag", "name": "list_notes_endpoint", "path": "/home/kavia/workspace/code-generation/note-management-system-155962-155971/notes_backend/src/api/routes/notes.py", "pattern": "/^def list_notes_endpoint($/", "language": "Python", "typeref": "typename:List[NoteOut]", "kind": "function", "signature": "( offset: int = Query(0, ge=0, description=\"Number of items to skip\"), limit: int = Query(100, ge=1, le=500, description=\"Maximum number of items to return\"), settings: Settings = Depends(get_settings), conn=Depends(_get_db_conn), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/note-management-system-155962-155971/notes_backend/src/api/routes/notes.py", "pattern": "/^router = APIRouter(prefix=\"\\/notes\", tags=[\"Notes\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_note_endpoint", "path": "/home/kavia/workspace/code-generation/note-management-system-155962-155971/notes_backend/src/api/routes/notes.py", "pattern": "/^def update_note_endpoint($/", "language": "Python", "typeref": "typename:NoteOut", "kind": "function", "signature": "( payload: NoteUpdate, note_id: int = Path(..., ge=1, description=\"ID of the note to update\"), settings: Settings = Depends(get_settings), conn=Depends(_get_db_conn), )"}], "hash": "4ade1fe1ee7cbde5953d609d8f09abb7", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/routes/notes.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/notes\", tags=[\"Notes\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}