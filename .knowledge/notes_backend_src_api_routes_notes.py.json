{"is_source_file": true, "format": "Python", "description": "This file defines API routes for managing 'notes' in a note management system using FastAPI. It includes endpoints for creating, listing, retrieving, updating, and deleting notes, with dependencies managing database connections.", "external_files": ["../config", "../db", "../models", "../repository"], "external_methods": ["get_settings", "open_connection", "create_note", "list_notes", "get_note", "update_note", "delete_note"], "published": ["create_note_endpoint", "list_notes_endpoint", "get_note_endpoint", "update_note_endpoint", "delete_note_endpoint"], "classes": [], "methods": [{"name": "_get_db_conn(settings: Settings)", "description": "Dependency function that opens a database connection for each request and ensures it is closed afterward.", "scope": "", "scopeKind": ""}, {"name": "NoteOut create_note_endpoint( payload: NoteCreate, settings: Settings = Depends(get_settings), conn=Depends(_get_db_conn), )", "description": "Endpoint to create a new note with provided data.", "scope": "", "scopeKind": ""}, {"name": "List[NoteOut] list_notes_endpoint( offset: int = Query(0, ge=0, description=\"Number of items to skip\"), limit: int = Query(100, ge=1, le=500, description=\"Maximum number of items to return\"), settings: Settings = Depends(get_settings), conn=Depends(_get_db_conn), )", "description": "Endpoint to retrieve a list of notes with pagination.", "scope": "", "scopeKind": ""}, {"name": "NoteOut get_note_endpoint( note_id: int = Path(..., ge=1, description=\"ID of the note to fetch\"), settings: Settings = Depends(get_settings), conn=Depends(_get_db_conn), )", "description": "Endpoint to fetch a specific note by its ID.", "scope": "", "scopeKind": ""}, {"name": "NoteOut update_note_endpoint( payload: NoteUpdate, note_id: int = Path(..., ge=1, description=\"ID of the note to update\"), settings: Settings = Depends(get_settings), conn=Depends(_get_db_conn), )", "description": "Endpoint to update an existing note by ID.", "scope": "", "scopeKind": ""}, {"name": "Response delete_note_endpoint( note_id: int = Path(..., ge=1, description=\"ID of the note to delete\"), settings: Settings = Depends(get_settings), conn=Depends(_get_db_conn), )", "description": "Endpoint to delete a note by ID.", "scope": "", "scopeKind": ""}], "calls": ["create_note", "list_notes", "get_note", "update_note", "delete_note"], "search-terms": ["FastAPI notes API", "CRUD notes endpoints", "notes database connection", "Notes API router", "notes route handlers"], "state": 2, "file_id": 9, "knowledge_revision": 19, "git_revision": "", "ctags": [{"_type": "tag", "name": "_get_db_conn", "path": "/home/kavia/workspace/code-generation/note-management-system-155962-155971/notes_backend/src/api/routes/notes.py", "pattern": "/^def _get_db_conn(settings: Settings):$/", "language": "Python", "kind": "function", "signature": "(settings: Settings)"}, {"_type": "tag", "name": "create_note_endpoint", "path": "/home/kavia/workspace/code-generation/note-management-system-155962-155971/notes_backend/src/api/routes/notes.py", "pattern": "/^def create_note_endpoint($/", "language": "Python", "typeref": "typename:NoteOut", "kind": "function", "signature": "( payload: NoteCreate, settings: Settings = Depends(get_settings), conn=Depends(_get_db_conn), )"}, {"_type": "tag", "name": "delete_note_endpoint", "path": "/home/kavia/workspace/code-generation/note-management-system-155962-155971/notes_backend/src/api/routes/notes.py", "pattern": "/^def delete_note_endpoint($/", "language": "Python", "typeref": "typename:Response", "kind": "function", "signature": "( note_id: int = Path(..., ge=1, description=\"ID of the note to delete\"), settings: Settings = Depends(get_settings), conn=Depends(_get_db_conn), )"}, {"_type": "tag", "name": "get_note_endpoint", "path": "/home/kavia/workspace/code-generation/note-management-system-155962-155971/notes_backend/src/api/routes/notes.py", "pattern": "/^def get_note_endpoint($/", "language": "Python", "typeref": "typename:NoteOut", "kind": "function", "signature": "( note_id: int = Path(..., ge=1, description=\"ID of the note to fetch\"), settings: Settings = Depends(get_settings), conn=Depends(_get_db_conn), )"}, {"_type": "tag", "name": "list_notes_endpoint", "path": "/home/kavia/workspace/code-generation/note-management-system-155962-155971/notes_backend/src/api/routes/notes.py", "pattern": "/^def list_notes_endpoint($/", "language": "Python", "typeref": "typename:List[NoteOut]", "kind": "function", "signature": "( offset: int = Query(0, ge=0, description=\"Number of items to skip\"), limit: int = Query(100, ge=1, le=500, description=\"Maximum number of items to return\"), settings: Settings = Depends(get_settings), conn=Depends(_get_db_conn), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/note-management-system-155962-155971/notes_backend/src/api/routes/notes.py", "pattern": "/^router = APIRouter(prefix=\"\\/notes\", tags=[\"Notes\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_note_endpoint", "path": "/home/kavia/workspace/code-generation/note-management-system-155962-155971/notes_backend/src/api/routes/notes.py", "pattern": "/^def update_note_endpoint($/", "language": "Python", "typeref": "typename:NoteOut", "kind": "function", "signature": "( payload: NoteUpdate, note_id: int = Path(..., ge=1, description=\"ID of the note to update\"), settings: Settings = Depends(get_settings), conn=Depends(_get_db_conn), )"}], "hash": "b2198660b988d682c5197ad7b3a813f5", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/routes/notes.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/notes\", tags=[\"Notes\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"19": ""}]}