{"is_source_file": true, "format": "Python", "description": "This file contains functions for managing 'notes' in a database, including create, retrieve, list, update, and delete operations, acting as a data repository layer.", "external_files": ["./models.py"], "external_methods": ["NoteOut.model_validate"], "published": ["create_note", "get_note", "list_notes", "update_note", "delete_note"], "classes": [], "methods": [{"name": "str _now_iso()", "description": "Returns the current UTC timestamp as an ISO 8601 string.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] _row_to_note_dict(row: sqlite3.Row)", "description": "Converts a SQLite row to a dictionary suitable for creating NoteOut models.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict[str,Any]] _fetch_one(conn: sqlite3.Connection, sql: str, params: Tuple[Any, ...])", "description": "Executes a query and fetches a single row, returning it as a dictionary.", "scope": "", "scopeKind": ""}, {"name": "NoteOut create_note(conn: sqlite3.Connection, title: str, content: Optional[str])", "description": "Creates a new note in the database and returns the created NoteOut object.", "scope": "", "scopeKind": ""}, {"name": "Optional[NoteOut] get_note(conn: sqlite3.Connection, note_id: int)", "description": "Retrieves a note by its ID.", "scope": "", "scopeKind": ""}, {"name": "List[NoteOut] list_notes(conn: sqlite3.Connection, offset: int = 0, limit: int = 100)", "description": "Lists notes with pagination, ordered by last update time.", "scope": "", "scopeKind": ""}, {"name": "Optional[NoteOut] update_note( conn: sqlite3.Connection, note_id: int, title: Optional[str] = None, content: Optional[str] = None )", "description": "Updates a note's title and/or content and returns the updated NoteOut.", "scope": "", "scopeKind": ""}, {"name": "bool delete_note(conn: sqlite3.Connection, note_id: int)", "description": "Deletes a note by its ID, indicating success or failure.", "scope": "", "scopeKind": ""}], "calls": ["conn.execute", "conn.commit", "NoteOut.model_validate"], "search-terms": ["repository", "notes", "SQLite", "create_note", "get_note", "list_notes", "update_note", "delete_note"], "state": 2, "file_id": 8, "knowledge_revision": 17, "git_revision": "", "ctags": [{"_type": "tag", "name": "_fetch_one", "path": "/home/kavia/workspace/code-generation/note-management-system-155962-155971/notes_backend/src/api/repository.py", "pattern": "/^def _fetch_one(conn: sqlite3.Connection, sql: str, params: Tuple[Any, ...]) -> Optional[Dict[str/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(conn: sqlite3.Connection, sql: str, params: Tuple[Any, ...])"}, {"_type": "tag", "name": "_now_iso", "path": "/home/kavia/workspace/code-generation/note-management-system-155962-155971/notes_backend/src/api/repository.py", "pattern": "/^def _now_iso() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_row_to_note_dict", "path": "/home/kavia/workspace/code-generation/note-management-system-155962-155971/notes_backend/src/api/repository.py", "pattern": "/^def _row_to_note_dict(row: sqlite3.Row) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(row: sqlite3.Row)"}, {"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/note-management-system-155962-155971/notes_backend/src/api/repository.py", "pattern": "/^def create_note(conn: sqlite3.Connection, title: str, content: Optional[str]) -> NoteOut:$/", "language": "Python", "typeref": "typename:NoteOut", "kind": "function", "signature": "(conn: sqlite3.Connection, title: str, content: Optional[str])"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/note-management-system-155962-155971/notes_backend/src/api/repository.py", "pattern": "/^def delete_note(conn: sqlite3.Connection, note_id: int) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(conn: sqlite3.Connection, note_id: int)"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/note-management-system-155962-155971/notes_backend/src/api/repository.py", "pattern": "/^def get_note(conn: sqlite3.Connection, note_id: int) -> Optional[NoteOut]:$/", "language": "Python", "typeref": "typename:Optional[NoteOut]", "kind": "function", "signature": "(conn: sqlite3.Connection, note_id: int)"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/note-management-system-155962-155971/notes_backend/src/api/repository.py", "pattern": "/^def list_notes(conn: sqlite3.Connection, offset: int = 0, limit: int = 100) -> List[NoteOut]:$/", "language": "Python", "typeref": "typename:List[NoteOut]", "kind": "function", "signature": "(conn: sqlite3.Connection, offset: int = 0, limit: int = 100)"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/note-management-system-155962-155971/notes_backend/src/api/repository.py", "pattern": "/^def update_note($/", "language": "Python", "typeref": "typename:Optional[NoteOut]", "kind": "function", "signature": "( conn: sqlite3.Connection, note_id: int, title: Optional[str] = None, content: Optional[str] = None )"}], "hash": "259e5fb06193b09b39d608368cb316f0", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/repository.py", "revision_history": [{"17": ""}]}